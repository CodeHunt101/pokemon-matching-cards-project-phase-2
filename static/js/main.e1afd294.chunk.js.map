{"version":3,"sources":["Components/Card.js","Components/Deck.js","HelperFunctions.js","Components/GameControl.js","Components/GameManager.js","Components/Header.js","Components/Menu.js","Components/Review.js","Components/ReviewsFilter.js","Components/ReviewsManager.js","Components/Contact.js","InitialReviews.js","App.js","reportWebVitals.js","index.js"],"names":["Card","pokemon","handleClick","index","isCardOpen","disableCardIndicator","onClick","e","disabled","className","src","alt","Deck","pokemons","renderCards","map","idx","length","Spinner","animation","variant","shuffleArray","array","i","j","Math","floor","random","getPokemonIdFromImgUrl","target","firstElementChild","replace","smallStars","zero","Array","item","one","concat","two","three","four","five","bigStars","halfToOne","halfToTwo","halfToThree","halfToFour","halfToFive","GameControl","moves","restartGame","fetchReviews","handleGameDifficulty","deckSize","useState","isResultsModalReady","setIsResultsModalReady","isFormModalShown","setIsFormModalShown","firstName","lastName","rating","comments","form","setForm","handleFormInfo","name","value","onChange","Form","Check","inline","type","label","defaultChecked","Modal","centered","show","undefined","find","card","Header","closeButton","Title","Body","Footer","Button","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","parseInt","gameDifficulty","datePosted","Date","now","then","Control","required","placeholder","Group","controlId","Label","Select","GameManager","setPokemons","setDeckSize","fetchPokemons","samplePokeIds","shuffle","fill","id","slice","cloneSamplePokeIds","pokeImageUrls","pokeId","resp","json","sprites","other","dream_world","front_default","Promise","all","useEffect","setIsCardOpen","pokeIndexes","pokeIds","newPairOfPokesClicked","setNewPokesClicked","setMoves","setDisableCardIndicator","copyOfIsCardOpen","setTimeout","difficulty","easy","medium","hard","prevMoves","prevDisableCardIndicator","prevNewPokesClicked","href","Menu","Navbar","bg","Container","Nav","to","Review","review","text","style","width","toLocaleString","Text","ReviewsFilter","handleCheckboxChange","handleStartsFilter","Col","xs","FloatingLabel","ReviewsManager","reviews","isCheckboxChecked","setIsCheckboxChecked","starsFilter","setStarsFilter","checked","ratingsSum","reduce","acc","curr","ratingsAvg","round","calculateAvgRating","filter","reverse","Contact","email","phone","message","contactForm","setContactForm","handleChange","alert","catch","Row","as","rows","inititalReviews","App","initialReviews","setReviews","jsonReviews","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1afd294.chunk.js","sourcesContent":["import React from \"react\"\n\nexport default function Card({\n  pokemon,\n  handleClick,\n  index,\n  isCardOpen,\n  disableCardIndicator,\n}) {\n  return (\n    <button\n      onClick={(e) => handleClick(e, index)}\n      disabled={disableCardIndicator === 2 || isCardOpen}\n      className={\"card\"}\n    >\n      <img\n        className={isCardOpen ? \"open\" : \"hidden\"}\n        src={pokemon}\n        alt={pokemon}\n      ></img>\n    </button>\n  )\n}\n","import React from \"react\"\nimport Card from \"./Card\"\nimport { Spinner } from \"react-bootstrap\"\n\nexport default function Deck({\n  pokemons,\n  handleClick,\n  isCardOpen,\n  disableCardIndicator,\n}) {\n  const renderCards = () =>\n    pokemons.map((pokemon, idx) => (\n      <Card\n        key={idx}\n        index={idx}\n        pokemon={pokemon}\n        handleClick={handleClick}\n        isCardOpen={isCardOpen[idx]}\n        disableCardIndicator={disableCardIndicator}\n      />\n    ))\n\n  return (\n    <ul className={\"deck\"}>\n      {renderCards().length === 0 && (\n        <Spinner animation=\"border\" variant=\"primary\" />\n      )}\n      {renderCards()}\n    </ul>\n  )\n}\n","export default function shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1))\n    ;[array[i], array[j]] = [array[j], array[i]]\n  }\n  return array\n}\n\nexport function getPokemonIdFromImgUrl(e) {\n  if (e.target.className === \"card\") {\n    return e.target.firstElementChild.src.replace(/[^0-9]/g, \"\")\n  } else {\n    return e.target.src.replace(/[^0-9]/g, \"\")\n  }\n}\n\nexport const smallStars = {\n  zero: [...Array(5)].map((item, idx) => (\n    <i key={idx} className=\"far fa-star\"></i>\n  )),\n  one: [...Array(1)]\n    .map((item, idx) => <i key={idx} className=\"fas fa-star\"></i>)\n    .concat(\n      [...Array(4)].map((item, idx) => (\n        <i key={idx + 1} className=\"far fa-star\"></i>\n      ))\n    ),\n  two: [...Array(2)]\n    .map((item, idx) => <i key={idx} className=\"fas fa-star\"></i>)\n    .concat(\n      [...Array(3)].map((item, idx) => (\n        <i key={idx + 2} className=\"far fa-star\"></i>\n      ))\n    ),\n  three: [...Array(3)]\n    .map((item, idx) => <i key={idx} className=\"fas fa-star\"></i>)\n    .concat(\n      [...Array(2)].map((item, idx) => (\n        <i key={idx + 3} className=\"far fa-star\"></i>\n      ))\n    ),\n  four: [...Array(4)]\n    .map((item, idx) => <i key={idx} className=\"fas fa-star\"></i>)\n    .concat(\n      [...Array(1)].map((item, idx) => (\n        <i key={idx + 4} className=\"far fa-star\"></i>\n      ))\n    ),\n  five: [...Array(5)].map((item, idx) => (\n    <i key={idx} className=\"fas fa-star\"></i>\n  )),\n}\n\nexport const bigStars = {\n  zero: [...Array(5)].map((item, idx) => (\n    <i key={idx} className=\"far fa-star fa-3x\"></i>\n  )),\n  halfToOne: [...Array(1)]\n    .map((item, idx) => (\n      <i key={idx} className=\"fas fa-star-half-alt fa-3x\"></i>\n    ))\n    .concat(\n      [...Array(4)].map((item, idx) => (\n        <i key={idx + 1} className=\"far fa-star fa-3x\"></i>\n      ))\n    ),\n  one: [...Array(1)]\n    .map((item, idx) => <i key={idx} className=\"fas fa-star fa-3x\"></i>)\n    .concat(\n      [...Array(4)].map((item, idx) => (\n        <i key={idx + 1} className=\"far fa-star fa-3x\"></i>\n      ))\n    ),\n  halfToTwo: [...Array(1)]\n    .map((item, idx) => <i key={idx} className=\"fas fa-star fa-3x\"></i>)\n    .concat(\n      [...Array(1)].map((item, idx) => (\n        <i key={idx + 1} className=\"fas fa-star-half-alt fa-3x\"></i>\n      ))\n    )\n    .concat(\n      [...Array(3)].map((item, idx) => (\n        <i key={idx + 2} className=\"far fa-star fa-3x\"></i>\n      ))\n    ),\n  two: [...Array(2)]\n    .map((item, idx) => <i key={idx} className=\"fas fa-star fa-3x\"></i>)\n    .concat(\n      [...Array(3)].map((item, idx) => (\n        <i key={idx + 2} className=\"far fa-star fa-3x\"></i>\n      ))\n    ),\n  halfToThree: [...Array(2)]\n    .map((item, idx) => <i key={idx} className=\"fas fa-star fa-3x\"></i>)\n    .concat(\n      [...Array(1)].map((item, idx) => (\n        <i key={idx + 2} className=\"fas fa-star-half-alt fa-3x\"></i>\n      ))\n    )\n    .concat(\n      [...Array(2)].map((item, idx) => (\n        <i key={idx + 3} className=\"far fa-star fa-3x\"></i>\n      ))\n    ),\n  three: [...Array(3)]\n    .map((item, idx) => <i key={idx} className=\"fas fa-star fa-3x\"></i>)\n    .concat(\n      [...Array(2)].map((item, idx) => (\n        <i key={idx + 3} className=\"far fa-star fa-3x\"></i>\n      ))\n    ),\n  halfToFour: [...Array(3)]\n    .map((item, idx) => <i key={idx} className=\"fas fa-star fa-3x\"></i>)\n    .concat(\n      [...Array(1)].map((item, idx) => (\n        <i key={idx + 3} className=\"fas fa-star-half-alt fa-3x\"></i>\n      ))\n    )\n    .concat(\n      [...Array(1)].map((item, idx) => (\n        <i key={idx + 4} className=\"far fa-star fa-3x\"></i>\n      ))\n    ),\n  four: [...Array(4)]\n    .map((item, idx) => <i key={idx} className=\"fas fa-star fa-3x\"></i>)\n    .concat(\n      [...Array(1)].map((item, idx) => (\n        <i key={idx + 4} className=\"far fa-star fa-3x\"></i>\n      ))\n    ),\n  halfToFive: [...Array(4)]\n    .map((item, idx) => <i key={idx} className=\"fas fa-star fa-3x\"></i>)\n    .concat(\n      [...Array(1)].map((item, idx) => (\n        <i key={idx + 4} className=\"fas fa-star-half-alt fa-3x\"></i>\n      ))\n    ),\n  five: [...Array(5)].map((item, idx) => (\n    <i key={idx} className=\"fas fa-star fa-3x\"></i>\n  )),\n}\n","import React, { useState } from \"react\"\nimport { Modal, Button, Form } from \"react-bootstrap\"\n\nexport default function GameControl({\n  moves,\n  isCardOpen,\n  restartGame,\n  fetchReviews,\n  handleGameDifficulty,\n  deckSize,\n}) {\n  const [isResultsModalReady, setIsResultsModalReady] = useState(true)\n  const [isFormModalShown, setIsFormModalShown] = useState(false)\n  const [form, setForm] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    rating: \"\",\n    comments: \"\",\n  })\n\n  function showModal() {\n    return isCardOpen.find((card) => !card) === undefined ? true : false\n  }\n\n  function handleFormInfo(e) {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    setIsResultsModalReady(false)\n    const gameDifficulty = () => {\n      switch (deckSize) {\n        case 10:\n          return \"Easy\"\n        case 20:\n          return \"Medium\"\n        case 30:\n          return \"Hard\"\n        default:\n          return \"Medium\"\n      }\n    }\n    fetch(\"http://localhost:4000/reviews\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        firstName: form.firstName,\n        lastName: form.lastName,\n        rating: form.rating !== \"\" ? parseInt(form.rating) : 5,\n        comments: form.comments,\n        gameDifficulty: gameDifficulty(),\n        moves: moves,\n        datePosted: Date.now(),\n      }),\n    }).then(fetchReviews)\n    setForm({\n      firstName: \"\",\n      lastName: \"\",\n      rating: \"\",\n      comments: \"\",\n    })\n  }\n\n  return (\n    <div className=\"game-stats\">\n      <i\n        className=\"fas fa-retweet fa-2x\"\n        onClick={() => {\n          restartGame()\n          setIsResultsModalReady(true)\n          setIsFormModalShown(false)\n        }}\n      ></i>\n      <span>\n        <div\n          onChange={(e) => {\n            handleGameDifficulty(e)\n            setIsResultsModalReady(true)\n          }}\n        >\n          <Form.Check\n            inline\n            name=\"difficulty\"\n            type=\"radio\"\n            label=\"Easy\"\n            value=\"easy\"\n          />\n          <Form.Check\n            inline\n            name=\"difficulty\"\n            type=\"radio\"\n            label=\"Medium\"\n            value=\"medium\"\n            defaultChecked\n          />\n          <Form.Check\n            inline\n            name=\"difficulty\"\n            type=\"radio\"\n            label=\"Hard\"\n            value=\"hard\"\n          />\n        </div>\n      </span>\n      <span>\n        <h5>\n          <strong>Moves: {Math.floor(moves)}</strong>\n        </h5>\n      </span>\n      {isResultsModalReady && (\n        <Modal centered show={isResultsModalReady && showModal()}>\n          <Modal.Header\n            closeButton\n            onClick={() => {\n              setIsResultsModalReady(false)\n              setIsFormModalShown(false)\n            }}\n          >\n            <Modal.Title>Congratulations!</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            You've matched all cards in {Math.floor(moves)} moves!\n            <br />\n            <br />\n            Would you like to save your results and rate us?\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setIsResultsModalReady(false)\n                setIsFormModalShown(false)\n              }}\n            >\n              No\n            </Button>\n            <Button variant=\"primary\" onClick={() => setIsFormModalShown(true)}>\n              Yes\n            </Button>\n          </Modal.Footer>\n          {isFormModalShown && (\n            <Modal.Body>\n              <Form onSubmit={handleSubmit}>\n                <Form.Control\n                  required\n                  type=\"text\"\n                  placeholder=\"Enter first name\"\n                  name=\"firstName\"\n                  value={form.firstName}\n                  onChange={handleFormInfo}\n                />\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter last name\"\n                  name=\"lastName\"\n                  value={form.lastName}\n                  onChange={handleFormInfo}\n                />\n                <Form.Group controlId=\"formSelect\">\n                  <Form.Label>Rate me:</Form.Label>\n                  <Form.Select required name=\"rating\" onChange={handleFormInfo}>\n                    <option value=\"5\">Five</option>\n                    <option value=\"4\">Four</option>\n                    <option value=\"3\">Three</option>\n                    <option value=\"2\">Two</option>\n                    <option value=\"1\">One</option>\n                    <option value=\"0\">Zero</option>\n                  </Form.Select>\n                </Form.Group>\n                <br />\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Comments...\"\n                  name=\"comments\"\n                  value={form.comments}\n                  onChange={handleFormInfo}\n                />\n                <br />\n                <Modal.Footer>\n                  <Button variant=\"success\" type=\"submit\">\n                    Submit\n                  </Button>\n                </Modal.Footer>\n              </Form>\n            </Modal.Body>\n          )}\n        </Modal>\n      )}\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport Deck from \"./Deck\"\nimport shuffle, { getPokemonIdFromImgUrl } from \"../HelperFunctions\"\nimport GameControl from \"./GameControl\"\n\nexport default function GameManager({ fetchReviews }) {\n  const [pokemons, setPokemons] = useState([])\n  const [deckSize, setDeckSize] = useState(20)\n  useEffect(() => {\n    fetchPokemons()\n    setIsCardOpen(new Array(deckSize).fill(false))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [deckSize])\n\n  function fetchPokemons() {\n    setPokemons([])\n    const allPokeIds = new Array(151).fill(null).map((id, idx) => idx + 1)\n    const samplePokeIds = shuffle(allPokeIds).slice(0, deckSize / 2)\n    const cloneSamplePokeIds = [...samplePokeIds]\n    const finalSampleOfPokeIds = shuffle(\n      samplePokeIds.concat(cloneSamplePokeIds)\n    )\n\n    const pokeImageUrls = finalSampleOfPokeIds.map((pokeId) => {\n      return fetch(`https://pokeapi.co/api/v2/pokemon/${pokeId}`)\n        .then((resp) => resp.json())\n        .then((pokemon) => pokemon.sprites.other.dream_world.front_default)\n    })\n    Promise.all(pokeImageUrls).then((pokeImageUrls) =>\n      setPokemons(pokeImageUrls)\n    )\n  }\n\n  const [isCardOpen, setIsCardOpen] = useState(new Array(deckSize).fill(false))\n  const [newPairOfPokesClicked, setNewPokesClicked] = useState({\n    pokeIndexes: [],\n    pokeIds: [],\n  })\n  const [moves, setMoves] = useState(0)\n  const [disableCardIndicator, setDisableCardIndicator] = useState(0)\n  function handleClick(e, index) {\n    setMoves((prevMoves) => prevMoves + 0.5)\n    setDisableCardIndicator(\n      (prevDisableCardIndicator) => prevDisableCardIndicator + 1\n    )\n    const copyOfIsCardOpen = [...isCardOpen]\n    copyOfIsCardOpen[index] = true\n    setIsCardOpen(copyOfIsCardOpen)\n    setNewPokesClicked((prevNewPokesClicked) => ({\n      pokeIndexes: prevNewPokesClicked.pokeIndexes.concat(index),\n      pokeIds: prevNewPokesClicked.pokeIds.concat(getPokemonIdFromImgUrl(e)),\n    }))\n  }\n  useEffect(() => {\n    const timeOut = 500\n    const copyOfIsCardOpen = [...isCardOpen]\n    /*if two cards are selected, even if it's the same card clicked twice, disable all cards from \n    receiving clicks within the given timeout and clean up pairPokeIndexes and pairpokeIds */\n    if (newPairOfPokesClicked.pokeIndexes.length === 2) {\n      setTimeout(() => setDisableCardIndicator(0), timeOut)\n      setNewPokesClicked({ pokeIndexes: [], pokeIds: [] })\n      /* if additionally, their id's don't match, disable all cards from receiving clicks \n      and hide the selected cards within the given timeOut */\n      if (\n        newPairOfPokesClicked.pokeIds[0] !== newPairOfPokesClicked.pokeIds[1]\n      ) {\n        setNewPokesClicked({ pokeIndexes: [], pokeIds: [] })\n        copyOfIsCardOpen[newPairOfPokesClicked.pokeIndexes[0]] = false\n        copyOfIsCardOpen[newPairOfPokesClicked.pokeIndexes[1]] = false\n        setTimeout(() => {\n          setIsCardOpen(copyOfIsCardOpen)\n        }, timeOut)\n      }\n    }\n  }, [newPairOfPokesClicked, isCardOpen, disableCardIndicator])\n\n  function restartGame() {\n    setIsCardOpen(new Array(deckSize).fill(false))\n    setNewPokesClicked({ pokeIndexes: [], pokeIds: [] })\n    setMoves(0)\n    setDisableCardIndicator(0)\n    fetchPokemons()\n  }\n\n  function handleGameDifficulty(e) {\n    const difficulty = {\n      easy: () => setDeckSize(10),\n      medium: () => setDeckSize(20),\n      hard: () => setDeckSize(30),\n    }\n    setNewPokesClicked({ pokeIndexes: [], pokeIds: [] })\n    setMoves(0)\n    setDisableCardIndicator(0)\n    return difficulty[e.target.value]()\n  }\n\n  return (\n    <>\n      <GameControl\n        moves={moves}\n        isCardOpen={isCardOpen}\n        restartGame={restartGame}\n        fetchReviews={fetchReviews}\n        handleGameDifficulty={handleGameDifficulty}\n        deckSize={deckSize}\n      />\n      <Deck\n        pokemons={pokemons}\n        handleClick={handleClick}\n        isCardOpen={isCardOpen}\n        disableCardIndicator={disableCardIndicator}\n      />\n    </>\n  )\n}\n","import React from \"react\"\n\nexport default function Header() {\n  return (\n    <div className={\"header\"}>\n      <a id={\"contact-me\"} href=\"mailto:haroldtm55@gmail.com\">\n        <b>Contact the Developer</b>\n      </a>\n      <img\n        src={\n          \"https://upload.wikimedia.org/wikipedia/commons/9/98/International_Pok%C3%A9mon_logo.svg\"\n        }\n        alt={\"The international Pokemon logo.\"}\n      ></img>\n      <h1>Matching Cards</h1>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Navbar, Container, Nav } from \"react-bootstrap\"\nimport { Link } from \"react-router-dom\"\n\nexport default function Menu() {\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\">\n      <Container>\n        <Nav className=\"Navbar\">\n          <Link to=\"/\">\n            <i className=\"fas fa-gamepad fa-3x\"></i>\n          </Link>\n          <Link to=\"/reviews\">\n            <b>Reviews</b>\n          </Link>\n          <Link to=\"/contact\">\n            <b>Contact</b>\n          </Link>\n        </Nav>\n      </Container>\n    </Navbar>\n  )\n}\n","import React from \"react\"\nimport { Card as BtpCard } from \"react-bootstrap\"\nimport { smallStars } from \"../HelperFunctions\"\n\nexport default function Review({ review }) {\n  function generateStars(rating) {\n    return {\n      0: smallStars.zero,\n      1: smallStars.one,\n      2: smallStars.two,\n      3: smallStars.three,\n      4: smallStars.four,\n      5: smallStars.five,\n    }[rating]\n  }\n\n  return (\n    <>\n      <BtpCard\n        bg=\"Secondary\"\n        text=\"dark\"\n        style={{ width: \"18rem\" }}\n        className=\"mb-2\"\n      >\n        <BtpCard.Header>\n          <i className=\"fas fa-child\"></i>{\" \"}\n          <b>\n            {review.firstName + \" \" + review.lastName}\n            <br />\n            {new Date(review.datePosted).toLocaleString()}\n          </b>\n        </BtpCard.Header>\n        <BtpCard.Body>\n          <BtpCard.Title>{generateStars(review.rating)}</BtpCard.Title>\n          <BtpCard.Text>\n            {review.comments}\n            <br />\n            <strong>Difficulty: {review.gameDifficulty}</strong>\n            <br />\n            <strong>Moves: {review.moves}</strong>\n          </BtpCard.Text>\n        </BtpCard.Body>\n      </BtpCard>\n    </>\n  )\n}\n","import React from \"react\"\nimport { Form, Col, FloatingLabel } from \"react-bootstrap\"\n\nexport default function ReviewsFilter({\n  handleCheckboxChange,\n  handleStartsFilter,\n}) {\n  return (\n    <div className=\"filter-reviews\">\n      <Form>\n        <Col xs={2}>\n          <Form.Check\n            onChange={handleCheckboxChange}\n            type=\"checkbox\"\n            label=\"Sort by oldest review\"\n          />\n          <FloatingLabel label=\"Filter by stars\">\n            <Form.Select name=\"rating\" onChange={handleStartsFilter}>\n              <option value=\"All\">All</option>\n              <option value=\"5\">Five</option>\n              <option value=\"4\">Four</option>\n              <option value=\"3\">Three</option>\n              <option value=\"2\">Two</option>\n              <option value=\"1\">One</option>\n              <option value=\"0\">Zero</option>\n            </Form.Select>\n          </FloatingLabel>\n        </Col>\n      </Form>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport Review from \"./Review\"\nimport ReviewsFilter from \"./ReviewsFilter\"\nimport { bigStars } from \"../HelperFunctions\"\n\nexport default function ReviewsManager({ reviews }) {\n  const [isCheckboxChecked, setIsCheckboxChecked] = useState(false)\n  const [starsFilter, setStarsFilter] = useState(\"All\")\n\n  function calculateAvgRating() {\n    const ratingsSum = reviews\n      .map((review) => review.rating)\n      .reduce((acc, curr) => acc + curr)\n    const ratingsAvg = Math.round((ratingsSum / reviews.length) * 2) / 2\n\n    return {\n      0: bigStars.zero,\n      0.5: bigStars.halfToOne,\n      1: bigStars.one,\n      1.5: bigStars.halfToTwo,\n      2: bigStars.two,\n      2.5: bigStars.halfToThree,\n      3: bigStars.three,\n      3.5: bigStars.halfToFour,\n      4: bigStars.four,\n      4.5: bigStars.halfToFive,\n      5: bigStars.five,\n    }[ratingsAvg]\n  }\n\n  function handleCheckboxChange(e) {\n    if (e.target.checked) {\n      setIsCheckboxChecked(true)\n    } else setIsCheckboxChecked(false)\n  }\n\n  function handleStartsFilter(e) {\n    if (e.target.value === null || e.target.value === \"All\") {\n      setStarsFilter(\"All\")\n    } else {\n      setStarsFilter(parseInt(e.target.value))\n    }\n  }\n\n  function renderReviews() {\n    if (isCheckboxChecked && starsFilter === \"All\") {\n      return reviews.map((review, idx) => <Review key={idx} review={review} />)\n    } else if (isCheckboxChecked && starsFilter !== \"All\") {\n      return reviews\n        .filter((review) => review.rating === starsFilter)\n        .map((review, idx) => <Review key={idx} review={review} />)\n    } else if (!isCheckboxChecked && starsFilter === \"All\") {\n      return reviews\n        .map((review, idx) => <Review key={idx} review={review} />)\n        .reverse()\n    } else if (!isCheckboxChecked && starsFilter !== \"All\") {\n      return reviews\n        .filter((review) => review.rating === starsFilter)\n        .map((review, idx) => <Review key={idx} review={review} />)\n        .reverse()\n    }\n  }\n\n  return (\n    <>\n      <h1>\n        <b>Reviews</b>\n      </h1>\n      {\n        <ReviewsFilter\n          handleCheckboxChange={handleCheckboxChange}\n          handleStartsFilter={handleStartsFilter}\n        />\n      }\n      <div className=\"average-rating\">{calculateAvgRating()}</div>\n      <div className=\"reviews-container\">{renderReviews()}</div>\n    </>\n  )\n}\n","import React, { useState } from \"react\"\nimport { Form, Row, Button, Col } from \"react-bootstrap\"\n\nexport default function Contact() {\n  const [contactForm, setContactForm] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    message: \"\",\n  })\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    fetch(\"http://localhost:4000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        firstName: contactForm.firstName,\n        lastName: contactForm.lastName,\n        email: contactForm.email,\n        phone: contactForm.phone,\n        message: contactForm.message,\n      }),\n    })\n      .then(() =>\n        alert(`Thank you ${contactForm.firstName}, I will contact you soon!`)\n      )\n      .catch(() =>\n        alert(`Thank you ${contactForm.firstName}, I will contact you soon!`)\n      )\n    setContactForm({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      message: \"\",\n    })\n  }\n\n  function handleChange(e) {\n    setContactForm({\n      ...contactForm,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  return (\n    <div className=\"contact-us\">\n      <h1>\n        <b>Contact</b>\n      </h1>\n      <div className=\"contact-info\">\n        <div className=\"email\">\n          <i className=\"fas fa-paper-plane fa-2x\"></i>\n          <span>\n            <a href=\"mailto:haroldtm55@gmail.com\">haroldtm55@gmail.com</a>\n          </span>\n        </div>\n        <div className=\"phone\">\n          <i className=\"fas fa-mobile-alt fa-2x\"></i>\n          <span>\n            <a href=\"callto:+61404927123\">+61 401 927 123</a>\n          </span>\n        </div>\n      </div>\n      <Form onSubmit={handleSubmit}>\n        <Row className=\"mb-3\">\n          <Form.Group as={Col} controlId=\"formGridFirstName\">\n            <Form.Label>First Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter first name\"\n              name=\"firstName\"\n              onChange={handleChange}\n              value={contactForm.firstName}\n            />\n          </Form.Group>\n\n          <Form.Group as={Col} controlId=\"formGridSurname\">\n            <Form.Label>Surname</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter Surname\"\n              name=\"lastName\"\n              onChange={handleChange}\n              value={contactForm.lastName}\n            />\n          </Form.Group>\n        </Row>\n\n        <Row className=\"mb-3\">\n          <Form.Group as={Col} controlId=\"formGridEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Enter email\"\n              name=\"email\"\n              onChange={handleChange}\n              value={contactForm.email}\n            />\n          </Form.Group>\n\n          <Form.Group as={Col} controlId=\"formGridPhone\">\n            <Form.Label>Phone number</Form.Label>\n            <Form.Control\n              type=\"tel\"\n              placeholder=\"Enter phone number\"\n              name=\"phone\"\n              onChange={handleChange}\n              value={contactForm.phone}\n            />\n          </Form.Group>\n        </Row>\n\n        <Form.Group as={Col} className=\"mb-3\" controlId=\"textarea\">\n          <Form.Label>Your message:</Form.Label>\n          <Form.Control\n            required\n            as=\"textarea\"\n            rows={3}\n            name=\"message\"\n            onChange={handleChange}\n            value={contactForm.message}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  )\n}\n","const inititalReviews = [\n  {\n    firstName: \"Harold\",\n    lastName: \"Torres\",\n    rating: 5,\n    comments: \"I like pokemons!\",\n    gameDifficulty: \"Medium\",\n    moves: 27,\n    datePosted: 1624191071351,\n  },\n  {\n    firstName: \"Sha\",\n    lastName: \"\",\n    rating: 3,\n    comments: \"Could be better\",\n    gameDifficulty: \"Hard\",\n    moves: 24,\n    datePosted: 1625192071351,\n  },\n  {\n    firstName: \"Jae\",\n    lastName: \"\",\n    rating: 4,\n    comments: \"Are pokemons real??\",\n    gameDifficulty: \"Medium\",\n    moves: 25,\n    datePosted: 1626193071351,\n  },\n  {\n    firstName: \"Min\",\n    lastName: \"\",\n    rating: 5,\n    comments: \"\",\n    gameDifficulty: \"Hard\",\n    moves: 25,\n    datePosted: 1627194071351,\n  },\n  {\n    firstName: \"Justin\",\n    lastName: \"\",\n    rating: 4,\n    comments:\n      \"I like to write long posts, and that's why my post is the longest so far.\",\n    gameDifficulty: \"Medium\",\n    moves: 27,\n    datePosted: 1627295071351,\n  },\n  {\n    firstName: \"Thomas\",\n    lastName: \"\",\n    rating: 2,\n    comments: \"How many pokemons are there?\",\n    gameDifficulty: \"Easy\",\n    moves: 26,\n    datePosted: 1628196071351,\n  },\n]\n\nexport default inititalReviews\n","import React, { useEffect, useState } from \"react\"\nimport { Container } from \"react-bootstrap\"\nimport GameManager from \"./Components/GameManager\"\nimport Header from \"./Components/Header\"\nimport Menu from \"./Components/Menu\"\nimport ReviewsManager from \"./Components/ReviewsManager\"\nimport Contact from \"./Components/Contact\"\nimport { Switch, Route } from \"react-router-dom\"\nimport initialReviews from \"./InitialReviews\"\n\nexport default function App() {\n  const [reviews, setReviews] = useState(initialReviews)\n\n  function fetchReviews() {\n    fetch(\"http://localhost:4000/reviews\")\n      .then((resp) => resp.json())\n      .then((jsonReviews) => {\n        setReviews(initialReviews.concat(jsonReviews))\n      })\n      .catch(() =>\n        alert(\n          \"Welcome and enjoy the Matching Cards Pokemon game! \\nIt seems that you've opened the deployed version. Eveything will work fine except new reviews won't be posted, and contact form submissions won't be stored in the mock JSON server database.\\nTo experience all the features, please clone the repo and run both npm i and npm start.\"\n        )\n      )\n  }\n\n  useEffect(() => {\n    fetchReviews()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Container>\n      <Menu />\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <GameManager fetchReviews={fetchReviews} />\n        </Route>\n        <Route exact path=\"/reviews\">\n          <ReviewsManager reviews={reviews} />\n        </Route>\n        <Route exact path=\"/contact\">\n          <Contact />\n        </Route>\n      </Switch>\n    </Container>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { HashRouter } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}